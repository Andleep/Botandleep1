#!/usr/bin/env python3
"""
๐ ููู ุชุดุบูู ุงูุจูุช ุนูู Render
"""

import os
import sys
import logging
from main_bot import UltraFastTradingBot, SUPER_CONFIG
from data_fetcher import UltraDataFetcher

# ุฅุนุฏุงุฏ logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(sys.stdout),
        logging.FileHandler('render_bot.log')
    ]
)

logger = logging.getLogger(__name__)

def load_render_config():
    """ุชุญููู ุงูุฅุนุฏุงุฏุงุช ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ ูู Render"""
    config = SUPER_CONFIG.copy()
    
    # ุชุญุฏูุซ ุงูุฅุนุฏุงุฏุงุช ูู environment variables
    config["initial_balance"] = float(os.getenv("INITIAL_BALANCE", 10.0))
    config["timeframe"] = os.getenv("TIME_FRAME", "1m")
    config["simulation_days"] = int(os.getenv("SIMULATION_DAYS", 7))
    config["base_risk"] = float(os.getenv("BASE_RISK", 0.03))
    
    # ูุนุงูุฌุฉ ุงูุฃุฒูุงุฌ
    pairs_str = os.getenv("SELECTED_PAIRS", "BTCUSDT,ETHUSDT,BNBUSDT,ADAUSDT,XRPUSDT")
    config["selected_pairs"] = [p.strip() for p in pairs_str.split(",")]
    
    logger.info(f"๐ฏ ุงูุฅุนุฏุงุฏุงุช ุงููุญููุฉ: {len(config['selected_pairs'])} ุฃุฒูุงุฌ | ุฑุฃุณ ุงููุงู: ${config['initial_balance']}")
    
    return config

def run_bot_on_render():
    """ุชุดุบูู ุงูุจูุช ุนูู ุจูุฆุฉ Render"""
    try:
        logger.info("๐ ุจุฏุก ุชุดุบูู ุงูุจูุช ุนูู Render...")
        
        # ุชุญููู ุงูุฅุนุฏุงุฏุงุช
        config = load_render_config()
        
        # ุฅูุดุงุก ุงูุจูุช
        bot = UltraFastTradingBot(config)
        
        # ุฌูุจ ุงูุจูุงูุงุช
        data_fetcher = UltraDataFetcher(config)
        klines_data = data_fetcher.fetch_multiple_klines(
            config["selected_pairs"], 
            config["timeframe"], 
            days=config["simulation_days"]
        )
        
        if not klines_data:
            logger.error("โ ูุดู ูู ุฌูุจ ุจูุงูุงุช ุงูุณูู")
            return False
        
        logger.info(f"โ ุชู ุฌูุจ ุจูุงูุงุช {len(klines_data)} ุฒูุฌ ุจูุฌุงุญ")
        
        # ุชุดุบูู ุงููุญุงูุงุฉ
        results = bot.run_ultra_simulation(
            klines_data, 
            config["timeframe"],
            days=config["simulation_days"]
        )
        
        # ุนุฑุถ ุงููุชุงุฆุฌ
        print("\n" + "="*70)
        print("๐ ูุชุงุฆุฌ ุงูุจูุช ุงูุชุฏุงููู ุงููุงุฆู ุนูู Render")
        print("="*70)
        print(f"๐ ุฅุฌูุงูู ุงูุตููุงุช: {results['total_trades']}")
        print(f"๐ฐ ุงูุฑุจุญ ุงูุฅุฌูุงูู: ${results['total_profit']:.2f} ({results['profit_percentage']:.2f}%)")
        print(f"๐ฏ ูุนุฏู ุงููุฌุงุญ: {results['win_rate']:.1f}%")
        print(f"๐ ุงูุฑุตูุฏ ุงูููุงุฆู: ${results['final_balance']:.2f}")
        print(f"๐ฅ ุงูุฃุฑุจุงุญ ุงููุชุฑุงููุฉ: ${results['metrics']['compounded_profits']:.2f}")
        print("="*70)
        
        # ุชุญููู ุงูุฅุดุงุฑุงุช
        if results['signal_analysis']:
            print("\n๐ ุชุญููู ุฃููุงุน ุงูุฅุดุงุฑุงุช:")
            for signal_type, analysis in results['signal_analysis'].items():
                win_rate = (analysis['wins'] / analysis['count'] * 100) if analysis['count'] > 0 else 0
                avg_profit = analysis['profits'] / analysis['count'] if analysis['count'] > 0 else 0
                print(f"   {signal_type}: {analysis['count']} ุตููุฉ | ูุฌุงุญ: {win_rate:.1f}% | ูุชูุณุท ุงูุฑุจุญ: ${avg_profit:.4f}")
        
        logger.info("โ ุงูุชูู ุชุดุบูู ุงูุจูุช ุจูุฌุงุญ ุนูู Render")
        return True
        
    except Exception as e:
        logger.error(f"โ ุฎุทุฃ ูู ุงูุชุดุบูู ุนูู Render: {str(e)}")
        return False

if __name__ == "__main__":
    # ุชุดุบูู ุงูุจูุช
    success = run_bot_on_render()
    
    if success:
        print("\n๐ ุงูุจูุช ุงูุชูู ุจูุฌุงุญ! ุชุญูู ูู ุงูุณุฌูุงุช ููุชูุงุตูู ุงููุงููุฉ.")
        sys.exit(0)
    else:
        print("\nโ ูุดู ุชุดุบูู ุงูุจูุช. ุชุญูู ูู ุงูุณุฌูุงุช ููุชูุงุตูู.")
        sys.exit(1)
